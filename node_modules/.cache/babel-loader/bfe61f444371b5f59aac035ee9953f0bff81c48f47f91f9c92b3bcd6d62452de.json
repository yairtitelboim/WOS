{"ast":null,"code":"// data.ts\n\nexport const packages = {\n  A: {\n    name: 'Flexible',\n    description: 'Flexible',\n    items: ['• Flexible Terms', '• Enterprise Network Connectivity', '• Day 1 Branding & Signage', '• Core Occupancy Data'],\n    params: {}\n  },\n  B: {\n    name: 'Inclusive',\n    description: 'Inclusive',\n    items: ['• Furnished', '• Full Digital Infrastructure', '• AV Services Hardware', '• Plant Programming', '• Food & Beverage Service'],\n    params: {}\n  },\n  C: {\n    name: 'Fully Managed',\n    description: 'Fully Managed',\n    items: ['• Dedicated WX Coordinator', '• Full Mail and Package Handling', '• Hardware & Data Collection', '• IT/AV Help Desk'],\n    params: {}\n  }\n};\nexport const managementCosts = {\n  preOccupancy: {\n    'Term Rent': 80,\n    'Upfront WiFi': 3.00,\n    'Branding/Signage': 2.00,\n    'Furniture': 27.00,\n    'Plants Upfront': 0.75,\n    'Cabling and Drops': 5.00\n  },\n  recurring: {\n    'Opex (monthly)': 1.67,\n    'WiFi': 975,\n    'Plants': 0.05,\n    'F&B': 25,\n    'Dedicated WX': 10000,\n    'IT/AV Help Desk': 0.25\n  }\n};\nexport const RSF = 5374;\nexport const calculateTermRent = term => {\n  const baseTermRent = managementCosts.preOccupancy['Term Rent'];\n  const termPremium = 0.1; // 10% default term premium\n  if (term === 5) return baseTermRent;\n  return baseTermRent * (1 + (5 - term) * termPremium);\n};\nexport const calculateMonthlyTotal = (pkg, term) => {\n  let monthlyTotal = 0;\n  const monthsInTerm = term * 12;\n\n  // Base Rent\n  const baseRent = calculateTermRent(term);\n  monthlyTotal += (baseRent + managementCosts.recurring['Opex (monthly)']) * RSF / 12;\n\n  // Enterprise grade WiFi\n  monthlyTotal += managementCosts.recurring['WiFi'];\n  monthlyTotal += managementCosts.preOccupancy['Upfront WiFi'] * RSF / monthsInTerm;\n\n  // Branding & Signage (all packages)\n  monthlyTotal += managementCosts.preOccupancy['Branding/Signage'] * RSF / monthsInTerm;\n  if (pkg === 'B' || pkg === 'C') {\n    // Furnished\n    monthlyTotal += managementCosts.preOccupancy['Furniture'] * RSF / monthsInTerm;\n\n    // Plant Programming\n    monthlyTotal += managementCosts.preOccupancy['Plants Upfront'] * RSF / monthsInTerm;\n\n    // Full Digital Infrastructure\n    monthlyTotal += 975; // Fixed cost as per sidebar\n\n    // Food & Beverage Service\n    monthlyTotal += 1343.50; // Fixed cost as per sidebar\n  }\n  if (pkg === 'C') {\n    // Dedicated Coordinator\n    monthlyTotal += 10000 / 12; // $10,000 annually, divided by 12 for monthly cost\n\n    // IT/AV Help Desk\n    monthlyTotal += 1343.50; // Fixed cost as per sidebar\n  }\n  console.log(`Monthly total for ${pkg}-${term}: ${monthlyTotal}`);\n  return monthlyTotal;\n};\nexport const calculateAnnualTotal = monthlyTotal => {\n  return monthlyTotal * 12;\n};\nexport const getAdjustedValue = (value, term) => {\n  const adjustmentFactor = 1 - (term - 2) * 0.1; // 10% decrease per year after year 2\n  return value * adjustmentFactor;\n};\nexport const formatPrice = price => {\n  const roundedPrice = Math.round(price); // Round to nearest whole number\n  if (roundedPrice >= 1000000) {\n    return `$<span class=\"text-6xl\">${(roundedPrice / 1000000).toFixed(1)}</span>M`;\n  } else {\n    return `$<span class=\"text-4xl\">${(roundedPrice / 1000).toFixed(0)}</span>k`;\n  }\n};\nexport const generatePricing = (isManagementMode, discountRate) => {\n  const pricing = {};\n  [2, 3, 4, 5].forEach(term => {\n    pricing[term.toString()] = {\n      A: isManagementMode ? calculateNER('A', term, discountRate) : calculateMonthlyTotal('A', term),\n      B: isManagementMode ? calculateNER('B', term, discountRate) : calculateMonthlyTotal('B', term),\n      C: isManagementMode ? calculateNER('C', term, discountRate) : calculateMonthlyTotal('C', term)\n    };\n  });\n  return pricing;\n};\nexport const getCurrentPricing = (isManagementMode, discountRate) => {\n  return generatePricing(isManagementMode, discountRate);\n};\n\n// Placeholder for calculateNER function\nconst calculateNER = (pkg, term, discountRate) => {\n  // Implementation of NER calculation\n  // This should be replaced with the actual implementation\n  return 0;\n};","map":{"version":3,"names":["packages","A","name","description","items","params","B","C","managementCosts","preOccupancy","recurring","RSF","calculateTermRent","term","baseTermRent","termPremium","calculateMonthlyTotal","pkg","monthlyTotal","monthsInTerm","baseRent","console","log","calculateAnnualTotal","getAdjustedValue","value","adjustmentFactor","formatPrice","price","roundedPrice","Math","round","toFixed","generatePricing","isManagementMode","discountRate","pricing","forEach","toString","calculateNER","getCurrentPricing"],"sources":["/Users/yairtitelboim/Documents/Kernel/ALLAPPS/SPEC/version-03/office-leasing-app/src/data.ts"],"sourcesContent":["// data.ts\n\nexport type PackageParams = {\n  [key: string]: number;\n};\n\nexport type Package = {\n  name: string;\n  description: string;\n  items: string[];\n  params: PackageParams;\n};\n\nexport type Packages = {\n  [key: string]: Package;\n};\n\nexport type PricingYear = {\n  [packageKey: string]: number;\n};\n\nexport type Pricing = {\n  [year: string]: PricingYear;\n};\n\nexport const packages: Packages = {\n  A: { \n    name: 'Flexible', \n    description: 'Flexible',\n    items: ['• Flexible Terms', '• Enterprise Network Connectivity', '• Day 1 Branding & Signage', '• Core Occupancy Data'],\n    params: {}\n  },\n  B: { \n    name: 'Inclusive', \n    description: 'Inclusive',\n    items: ['• Furnished', '• Full Digital Infrastructure', '• AV Services Hardware', '• Plant Programming', '• Food & Beverage Service'],\n    params: {}\n  },\n  C: { \n    name: 'Fully Managed', \n    description: 'Fully Managed',\n    items: ['• Dedicated WX Coordinator', '• Full Mail and Package Handling', '• Hardware & Data Collection', '• IT/AV Help Desk'],\n    params: {}\n  }\n};\n\nexport type ManagementCosts = {\n  preOccupancy: {\n    [key: string]: number;\n  };\n  recurring: {\n    [key: string]: number;\n  };\n};\n\nexport const managementCosts: ManagementCosts = {\n  preOccupancy: {\n    'Term Rent': 80,\n    'Upfront WiFi': 3.00,\n    'Branding/Signage': 2.00,\n    'Furniture': 27.00,\n    'Plants Upfront': 0.75,\n    'Cabling and Drops': 5.00,\n  },\n  recurring: {\n    'Opex (monthly)': 1.67,\n    'WiFi': 975,\n    'Plants': 0.05,\n    'F&B': 25,\n    'Dedicated WX': 10000,\n    'IT/AV Help Desk': 0.25,\n  }\n};\n\nexport const RSF: number = 5374;\n\nexport const calculateTermRent = (term: number): number => {\n  const baseTermRent = managementCosts.preOccupancy['Term Rent'];\n  const termPremium = 0.1; // 10% default term premium\n  if (term === 5) return baseTermRent;\n  return baseTermRent * (1 + ((5 - term) * termPremium));\n};\n\nexport const calculateMonthlyTotal = (pkg: string, term: number): number => {\n  let monthlyTotal = 0;\n  const monthsInTerm = term * 12;\n\n  // Base Rent\n  const baseRent = calculateTermRent(term);\n  monthlyTotal += (baseRent + managementCosts.recurring['Opex (monthly)']) * RSF / 12;\n\n  // Enterprise grade WiFi\n  monthlyTotal += managementCosts.recurring['WiFi'];\n  monthlyTotal += (managementCosts.preOccupancy['Upfront WiFi'] * RSF) / monthsInTerm;\n\n  // Branding & Signage (all packages)\n  monthlyTotal += (managementCosts.preOccupancy['Branding/Signage'] * RSF) / monthsInTerm;\n\n  if (pkg === 'B' || pkg === 'C') {\n    // Furnished\n    monthlyTotal += (managementCosts.preOccupancy['Furniture'] * RSF) / monthsInTerm;\n    \n    // Plant Programming\n    monthlyTotal += (managementCosts.preOccupancy['Plants Upfront'] * RSF) / monthsInTerm;\n    \n    // Full Digital Infrastructure\n    monthlyTotal += 975; // Fixed cost as per sidebar\n    \n    // Food & Beverage Service\n    monthlyTotal += 1343.50; // Fixed cost as per sidebar\n  }\n\n  if (pkg === 'C') {\n    // Dedicated Coordinator\n    monthlyTotal += 10000 / 12; // $10,000 annually, divided by 12 for monthly cost\n    \n    // IT/AV Help Desk\n    monthlyTotal += 1343.50; // Fixed cost as per sidebar\n  }\n\n  console.log(`Monthly total for ${pkg}-${term}: ${monthlyTotal}`);\n  return monthlyTotal;\n};\n\nexport const calculateAnnualTotal = (monthlyTotal: number): number => {\n  return monthlyTotal * 12;\n};\n\nexport const getAdjustedValue = (value: number, term: number): number => {\n  const adjustmentFactor = 1 - (term - 2) * 0.1; // 10% decrease per year after year 2\n  return value * adjustmentFactor;\n};\n\nexport type ProfitData = {\n  [year: string]: {\n    [pkg: string]: number;\n  };\n};\n\nexport const formatPrice = (price: number): string => {\n  const roundedPrice = Math.round(price); // Round to nearest whole number\n  if (roundedPrice >= 1000000) {\n    return `$<span class=\"text-6xl\">${(roundedPrice / 1000000).toFixed(1)}</span>M`;\n  } else {\n    return `$<span class=\"text-4xl\">${(roundedPrice / 1000).toFixed(0)}</span>k`;\n  }\n};\n\nexport const generatePricing = (isManagementMode: boolean, discountRate: number): Pricing => {\n  const pricing: Pricing = {};\n  [2, 3, 4, 5].forEach(term => {\n    pricing[term.toString()] = {\n      A: isManagementMode ? calculateNER('A', term, discountRate) : calculateMonthlyTotal('A', term),\n      B: isManagementMode ? calculateNER('B', term, discountRate) : calculateMonthlyTotal('B', term),\n      C: isManagementMode ? calculateNER('C', term, discountRate) : calculateMonthlyTotal('C', term)\n    };\n  });\n  return pricing;\n};\n\nexport const getCurrentPricing = (isManagementMode: boolean, discountRate: number): Pricing => {\n  return generatePricing(isManagementMode, discountRate);\n};\n\n// Placeholder for calculateNER function\nconst calculateNER = (pkg: string, term: number, discountRate: number): number => {\n  // Implementation of NER calculation\n  // This should be replaced with the actual implementation\n  return 0;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
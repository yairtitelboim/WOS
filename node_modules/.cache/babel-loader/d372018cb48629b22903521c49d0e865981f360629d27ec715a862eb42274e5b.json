{"ast":null,"code":"const mockCalculateNER = (pkg, term, discountRate, managementCosts, packages) => {\n  // Calculate base rent for the given term\n  const baseTermRent = managementCosts.preOccupancy['Term Rent'];\n  const actualTermRent = calculateTermRent(term, baseTermRent, discountRate);\n\n  // Calculate total costs\n  let totalCosts = actualTermRent;\n\n  // Add other costs based on the package\n  if (pkg === 'A' || pkg === 'B' || pkg === 'C') {\n    totalCosts += managementCosts.preOccupancy['Upfront WiFi'];\n    totalCosts += managementCosts.preOccupancy['Branding/Signage'];\n    totalCosts += managementCosts.recurring['Opex (monthly)'] * 12; // Annualized\n    totalCosts += managementCosts.recurring['WiFi'] / 5374 * 12; // Annualized, per RSF\n  }\n  if (pkg === 'B' || pkg === 'C') {\n    totalCosts += managementCosts.preOccupancy['Furniture'];\n    totalCosts += managementCosts.preOccupancy['Plants Upfront'];\n    totalCosts += managementCosts.preOccupancy['Cabling and Drops'];\n    totalCosts += managementCosts.recurring['Plants'] * 12; // Annualized\n    totalCosts += managementCosts.recurring['F&B'] * 12; // Annualized\n  }\n  if (pkg === 'C') {\n    totalCosts += managementCosts.recurring['Dedicated WX'] / 5374; // Per RSF\n    totalCosts += managementCosts.recurring['IT/AV Help Desk'] * 12; // Annualized\n  }\n\n  // Calculate NER\n  const annualRevenue = actualTermRent * 5374; // Total annual revenue\n  const annualCosts = totalCosts * 5374; // Total annual costs\n  let ner = (annualRevenue - annualCosts) / 5374; // NER per RSF\n\n  // Add some randomness (±$2)\n  const randomFactor = (Math.random() - 0.5) * 4;\n  ner += randomFactor;\n\n  // Ensure NER stays within a reasonable range ($50-$90)\n  return Math.min(Math.max(ner, 50), 90);\n};\n\n// Helper function to calculate term rent\nconst calculateTermRent = (term, baseTermRent, discountRate) => {\n  if (term === 5) return baseTermRent;\n  const termAdjustment = 1 + (5 - term) * (discountRate / 100);\n  return baseTermRent * termAdjustment;\n};\nexport default mockCalculateNER;","map":{"version":3,"names":["mockCalculateNER","pkg","term","discountRate","managementCosts","packages","baseTermRent","preOccupancy","actualTermRent","calculateTermRent","totalCosts","recurring","annualRevenue","annualCosts","ner","randomFactor","Math","random","min","max","termAdjustment"],"sources":["/Users/yairtitelboim/Documents/Kernel/ALLAPPS/SPEC/version-03/office-leasing-app/src/mockCalculateNER.ts"],"sourcesContent":["import { Package, ManagementCosts } from './data';\n\nconst mockCalculateNER = (\n  pkg: string, \n  term: number, \n  discountRate: number,\n  managementCosts: ManagementCosts,\n  packages: { [key: string]: Package }\n): number => {\n  // Calculate base rent for the given term\n  const baseTermRent = managementCosts.preOccupancy['Term Rent'];\n  const actualTermRent = calculateTermRent(term, baseTermRent, discountRate);\n  \n  // Calculate total costs\n  let totalCosts = actualTermRent;\n  \n  // Add other costs based on the package\n  if (pkg === 'A' || pkg === 'B' || pkg === 'C') {\n    totalCosts += managementCosts.preOccupancy['Upfront WiFi'];\n    totalCosts += managementCosts.preOccupancy['Branding/Signage'];\n    totalCosts += managementCosts.recurring['Opex (monthly)'] * 12; // Annualized\n    totalCosts += managementCosts.recurring['WiFi'] / 5374 * 12; // Annualized, per RSF\n  }\n  \n  if (pkg === 'B' || pkg === 'C') {\n    totalCosts += managementCosts.preOccupancy['Furniture'];\n    totalCosts += managementCosts.preOccupancy['Plants Upfront'];\n    totalCosts += managementCosts.preOccupancy['Cabling and Drops'];\n    totalCosts += managementCosts.recurring['Plants'] * 12; // Annualized\n    totalCosts += managementCosts.recurring['F&B'] * 12; // Annualized\n  }\n  \n  if (pkg === 'C') {\n    totalCosts += managementCosts.recurring['Dedicated WX'] / 5374; // Per RSF\n    totalCosts += managementCosts.recurring['IT/AV Help Desk'] * 12; // Annualized\n  }\n\n  // Calculate NER\n  const annualRevenue = actualTermRent * 5374; // Total annual revenue\n  const annualCosts = totalCosts * 5374; // Total annual costs\n  let ner = (annualRevenue - annualCosts) / 5374; // NER per RSF\n\n  // Add some randomness (±$2)\n  const randomFactor = (Math.random() - 0.5) * 4;\n  ner += randomFactor;\n\n  // Ensure NER stays within a reasonable range ($50-$90)\n  return Math.min(Math.max(ner, 50), 90);\n};\n\n// Helper function to calculate term rent\nconst calculateTermRent = (term: number, baseTermRent: number, discountRate: number): number => {\n  if (term === 5) return baseTermRent;\n  const termAdjustment = 1 + ((5 - term) * (discountRate / 100));\n  return baseTermRent * termAdjustment;\n};\n\nexport default mockCalculateNER;"],"mappings":"AAEA,MAAMA,gBAAgB,GAAGA,CACvBC,GAAW,EACXC,IAAY,EACZC,YAAoB,EACpBC,eAAgC,EAChCC,QAAoC,KACzB;EACX;EACA,MAAMC,YAAY,GAAGF,eAAe,CAACG,YAAY,CAAC,WAAW,CAAC;EAC9D,MAAMC,cAAc,GAAGC,iBAAiB,CAACP,IAAI,EAAEI,YAAY,EAAEH,YAAY,CAAC;;EAE1E;EACA,IAAIO,UAAU,GAAGF,cAAc;;EAE/B;EACA,IAAIP,GAAG,KAAK,GAAG,IAAIA,GAAG,KAAK,GAAG,IAAIA,GAAG,KAAK,GAAG,EAAE;IAC7CS,UAAU,IAAIN,eAAe,CAACG,YAAY,CAAC,cAAc,CAAC;IAC1DG,UAAU,IAAIN,eAAe,CAACG,YAAY,CAAC,kBAAkB,CAAC;IAC9DG,UAAU,IAAIN,eAAe,CAACO,SAAS,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,CAAC;IAChED,UAAU,IAAIN,eAAe,CAACO,SAAS,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;EAC/D;EAEA,IAAIV,GAAG,KAAK,GAAG,IAAIA,GAAG,KAAK,GAAG,EAAE;IAC9BS,UAAU,IAAIN,eAAe,CAACG,YAAY,CAAC,WAAW,CAAC;IACvDG,UAAU,IAAIN,eAAe,CAACG,YAAY,CAAC,gBAAgB,CAAC;IAC5DG,UAAU,IAAIN,eAAe,CAACG,YAAY,CAAC,mBAAmB,CAAC;IAC/DG,UAAU,IAAIN,eAAe,CAACO,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC;IACxDD,UAAU,IAAIN,eAAe,CAACO,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;EACvD;EAEA,IAAIV,GAAG,KAAK,GAAG,EAAE;IACfS,UAAU,IAAIN,eAAe,CAACO,SAAS,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,CAAC;IAChED,UAAU,IAAIN,eAAe,CAACO,SAAS,CAAC,iBAAiB,CAAC,GAAG,EAAE,CAAC,CAAC;EACnE;;EAEA;EACA,MAAMC,aAAa,GAAGJ,cAAc,GAAG,IAAI,CAAC,CAAC;EAC7C,MAAMK,WAAW,GAAGH,UAAU,GAAG,IAAI,CAAC,CAAC;EACvC,IAAII,GAAG,GAAG,CAACF,aAAa,GAAGC,WAAW,IAAI,IAAI,CAAC,CAAC;;EAEhD;EACA,MAAME,YAAY,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC;EAC9CH,GAAG,IAAIC,YAAY;;EAEnB;EACA,OAAOC,IAAI,CAACE,GAAG,CAACF,IAAI,CAACG,GAAG,CAACL,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;AACxC,CAAC;;AAED;AACA,MAAML,iBAAiB,GAAGA,CAACP,IAAY,EAAEI,YAAoB,EAAEH,YAAoB,KAAa;EAC9F,IAAID,IAAI,KAAK,CAAC,EAAE,OAAOI,YAAY;EACnC,MAAMc,cAAc,GAAG,CAAC,GAAI,CAAC,CAAC,GAAGlB,IAAI,KAAKC,YAAY,GAAG,GAAG,CAAE;EAC9D,OAAOG,YAAY,GAAGc,cAAc;AACtC,CAAC;AAED,eAAepB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
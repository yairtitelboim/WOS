{"ast":null,"code":"const calculateNER = (term, discountRate) => {\n  // Calculate total ongoing monthly costs per RSF\n  const ongoingMonthlyCostPerRSF = Object.values(managementCosts.recurring).reduce((total, value) => {\n    if (typeof value === 'number') {\n      return total + value;\n    }\n    return total;\n  }, 0);\n  console.log(\"Ongoing Monthly Cost per RSF:\", ongoingMonthlyCostPerRSF);\n\n  // Calculate annual cash flow based on ongoing costs\n  const annualCashFlow = ongoingMonthlyCostPerRSF * 12 * RSF;\n  console.log(\"Annual Cash Flow:\", annualCashFlow);\n\n  // Generate cash flows for the term (for ongoing payments only)\n  const cashFlows = Array(term).fill(annualCashFlow);\n  console.log(\"Cash Flows:\", cashFlows);\n\n  // Calculate DCF\n  const dcf = calculateDCF(cashFlows, discountRate);\n  console.log(\"DCF:\", dcf);\n\n  // Calculate NPV\n  const npv = calculateNPV(dcf);\n  console.log(\"NPV:\", npv);\n\n  // Calculate PMT (NER) from NPV\n  const monthlyRate = discountRate / 12;\n  const numberOfPayments = term * 12;\n  const ner = calculatePMT(monthlyRate, numberOfPayments, npv);\n  console.log(\"Calculated NER (before dividing by RSF):\", ner);\n\n  // Convert NER to per square foot\n  const nerPerSquareFoot = ner / RSF;\n  console.log(\"NER per Square Foot:\", nerPerSquareFoot);\n  return nerPerSquareFoot;\n};","map":{"version":3,"names":["calculateNER","term","discountRate","ongoingMonthlyCostPerRSF","Object","values","managementCosts","recurring","reduce","total","value","console","log","annualCashFlow","RSF","cashFlows","Array","fill","dcf","calculateDCF","npv","calculateNPV","monthlyRate","numberOfPayments","ner","calculatePMT","nerPerSquareFoot"],"sources":["/Users/yairtitelboim/Documents/Kernel/ALLAPPS/SPEC/version-03/office-leasing-app/src/calculateNER.ts"],"sourcesContent":["const calculateNER = (term: number, discountRate: number): number => {\n  // Calculate total ongoing monthly costs per RSF\n  const ongoingMonthlyCostPerRSF = Object.values(managementCosts.recurring).reduce((total, value) => {\n    if (typeof value === 'number') {\n      return total + value;\n    }\n    return total;\n  }, 0);\n\n  console.log(\"Ongoing Monthly Cost per RSF:\", ongoingMonthlyCostPerRSF);\n\n  // Calculate annual cash flow based on ongoing costs\n  const annualCashFlow = ongoingMonthlyCostPerRSF * 12 * RSF;\n  console.log(\"Annual Cash Flow:\", annualCashFlow);\n\n  // Generate cash flows for the term (for ongoing payments only)\n  const cashFlows = Array(term).fill(annualCashFlow);\n  console.log(\"Cash Flows:\", cashFlows);\n\n  // Calculate DCF\n  const dcf = calculateDCF(cashFlows, discountRate);\n  console.log(\"DCF:\", dcf);\n\n  // Calculate NPV\n  const npv = calculateNPV(dcf);\n  console.log(\"NPV:\", npv);\n\n  // Calculate PMT (NER) from NPV\n  const monthlyRate = discountRate / 12;\n  const numberOfPayments = term * 12;\n  const ner = calculatePMT(monthlyRate, numberOfPayments, npv);\n\n  console.log(\"Calculated NER (before dividing by RSF):\", ner);\n\n  // Convert NER to per square foot\n  const nerPerSquareFoot = ner / RSF;\n  console.log(\"NER per Square Foot:\", nerPerSquareFoot);\n\n  return nerPerSquareFoot;\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAGA,CAACC,IAAY,EAAEC,YAAoB,KAAa;EACnE;EACA,MAAMC,wBAAwB,GAAGC,MAAM,CAACC,MAAM,CAACC,eAAe,CAACC,SAAS,CAAC,CAACC,MAAM,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;IACjG,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC7B,OAAOD,KAAK,GAAGC,KAAK;IACtB;IACA,OAAOD,KAAK;EACd,CAAC,EAAE,CAAC,CAAC;EAELE,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAET,wBAAwB,CAAC;;EAEtE;EACA,MAAMU,cAAc,GAAGV,wBAAwB,GAAG,EAAE,GAAGW,GAAG;EAC1DH,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,cAAc,CAAC;;EAEhD;EACA,MAAME,SAAS,GAAGC,KAAK,CAACf,IAAI,CAAC,CAACgB,IAAI,CAACJ,cAAc,CAAC;EAClDF,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEG,SAAS,CAAC;;EAErC;EACA,MAAMG,GAAG,GAAGC,YAAY,CAACJ,SAAS,EAAEb,YAAY,CAAC;EACjDS,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEM,GAAG,CAAC;;EAExB;EACA,MAAME,GAAG,GAAGC,YAAY,CAACH,GAAG,CAAC;EAC7BP,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEQ,GAAG,CAAC;;EAExB;EACA,MAAME,WAAW,GAAGpB,YAAY,GAAG,EAAE;EACrC,MAAMqB,gBAAgB,GAAGtB,IAAI,GAAG,EAAE;EAClC,MAAMuB,GAAG,GAAGC,YAAY,CAACH,WAAW,EAAEC,gBAAgB,EAAEH,GAAG,CAAC;EAE5DT,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAEY,GAAG,CAAC;;EAE5D;EACA,MAAME,gBAAgB,GAAGF,GAAG,GAAGV,GAAG;EAClCH,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEc,gBAAgB,CAAC;EAErD,OAAOA,gBAAgB;AACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { RSF, managementCosts } from './data';\nconst calculateNER = (pkg, term, discountRate) => {\n  console.log(`\\nCalculating NER for Package ${pkg}, Term: ${term} years, Discount Rate: ${discountRate * 100}%`);\n  console.log(`RSF: ${RSF}`);\n  const monthlyRevenues = [];\n  const monthlyCosts = [];\n\n  // Calculate monthly revenue and costs for the entire term\n  for (let month = 0; month < term * 12; month++) {\n    let monthlyRevenue = 0;\n    let monthlyCost = 0;\n    console.log(`\\nMonth ${month + 1}:`);\n\n    // 1. Calculate Revenue\n    console.log('Calculating Revenue:');\n\n    // Base rent\n    const baseRent = managementCosts.preOccupancy['Term Rent'] * RSF / 12;\n    monthlyRevenue += baseRent;\n    console.log(`  Base Rent: $${baseRent.toFixed(2)}`);\n\n    // WiFi Revenue\n    monthlyRevenue += managementCosts.recurring['WiFi'];\n    console.log(`  WiFi Revenue: $${managementCosts.recurring['WiFi'].toFixed(2)}`);\n\n    // Branding/Signage\n    const brandingRevenue = managementCosts.preOccupancy['Branding/Signage'] * RSF / (term * 12);\n    monthlyRevenue += brandingRevenue;\n    console.log(`  Branding/Signage: $${brandingRevenue.toFixed(2)}`);\n\n    // Add package-specific items\n    if (pkg === 'B' || pkg === 'C') {\n      const furnitureRevenue = managementCosts.preOccupancy['Furniture'] * RSF / (term * 12);\n      monthlyRevenue += furnitureRevenue;\n      console.log(`  Furniture: $${furnitureRevenue.toFixed(2)}`);\n      const plantsRevenue = managementCosts.recurring['Plants'] * RSF;\n      monthlyRevenue += plantsRevenue;\n      console.log(`  Plants: $${plantsRevenue.toFixed(2)}`);\n      const cablingRevenue = managementCosts.preOccupancy['Cabling and Drops'] * RSF / (term * 12);\n      monthlyRevenue += cablingRevenue;\n      console.log(`  Cabling and Drops: $${cablingRevenue.toFixed(2)}`);\n      monthlyRevenue += managementCosts.recurring['F&B'];\n      console.log(`  F&B: $${managementCosts.recurring['F&B'].toFixed(2)}`);\n    }\n    if (pkg === 'C') {\n      monthlyRevenue += managementCosts.recurring['Dedicated WX'];\n      console.log(`  Dedicated WX: $${managementCosts.recurring['Dedicated WX'].toFixed(2)}`);\n      monthlyRevenue += managementCosts.recurring['IT/AV Help Desk'];\n      console.log(`  IT/AV Help Desk: $${managementCosts.recurring['IT/AV Help Desk'].toFixed(2)}`);\n    }\n    console.log(`Total Monthly Revenue: $${monthlyRevenue.toFixed(2)}`);\n\n    // 2. Calculate Costs\n    console.log('\\nCalculating Costs:');\n\n    // OpEx\n    const opexCost = managementCosts.recurring['Opex (monthly)'] * RSF;\n    monthlyCost += opexCost;\n    console.log(`  OpEx: $${opexCost.toFixed(2)}`);\n\n    // WiFi\n    const wifiCost = managementCosts.recurring['WiFi'] + managementCosts.preOccupancy['Upfront WiFi'] * RSF / (term * 12);\n    monthlyCost += wifiCost;\n    console.log(`  WiFi: $${wifiCost.toFixed(2)}`);\n\n    // Branding/Signage\n    const brandingCost = managementCosts.preOccupancy['Branding/Signage'] * RSF / (term * 12);\n    monthlyCost += brandingCost;\n    console.log(`  Branding/Signage: $${brandingCost.toFixed(2)}`);\n\n    // Add package-specific costs\n    if (pkg === 'B' || pkg === 'C') {\n      const plantsCost = managementCosts.recurring['Plants'] * RSF;\n      monthlyCost += plantsCost;\n      console.log(`  Plants: $${plantsCost.toFixed(2)}`);\n      monthlyCost += managementCosts.recurring['F&B'];\n      console.log(`  F&B: $${managementCosts.recurring['F&B'].toFixed(2)}`);\n      const furnitureCost = managementCosts.preOccupancy['Furniture'] * RSF / (term * 12);\n      monthlyCost += furnitureCost;\n      console.log(`  Furniture: $${furnitureCost.toFixed(2)}`);\n      const cablingCost = managementCosts.preOccupancy['Cabling and Drops'] * RSF / (term * 12);\n      monthlyCost += cablingCost;\n      console.log(`  Cabling and Drops: $${cablingCost.toFixed(2)}`);\n    }\n    if (pkg === 'C') {\n      monthlyCost += managementCosts.recurring['Dedicated WX'];\n      console.log(`  Dedicated WX: $${managementCosts.recurring['Dedicated WX'].toFixed(2)}`);\n      monthlyCost += managementCosts.recurring['IT/AV Help Desk'];\n      console.log(`  IT/AV Help Desk: $${managementCosts.recurring['IT/AV Help Desk'].toFixed(2)}`);\n    }\n    console.log(`Total Monthly Cost: $${monthlyCost.toFixed(2)}`);\n    monthlyRevenues.push(monthlyRevenue);\n    monthlyCosts.push(monthlyCost);\n  }\n\n  // 3. Calculate monthly cash flows\n  console.log('\\nCalculating Cash Flows:');\n  const cashFlows = monthlyRevenues.map((revenue, index) => {\n    const cashFlow = revenue - monthlyCosts[index];\n    console.log(`Month ${index + 1} Cash Flow: $${cashFlow.toFixed(2)}`);\n    return cashFlow;\n  });\n\n  // 4. Calculate NPV\n  console.log('\\nCalculating NPV:');\n  const monthlyRate = discountRate / 12;\n  const npv = cashFlows.reduce((sum, cf, index) => {\n    const discountedCF = cf / Math.pow(1 + monthlyRate, index + 1);\n    console.log(`Month ${index + 1} Discounted Cash Flow: $${discountedCF.toFixed(2)}`);\n    return sum + discountedCF;\n  }, 0);\n  console.log(`Total NPV: $${npv.toFixed(2)}`);\n\n  // 5. Calculate NER (monthly payment that would result in the same NPV)\n  const numberOfPayments = term * 12;\n  const ner = npv * monthlyRate / (1 - Math.pow(1 + monthlyRate, -numberOfPayments));\n  console.log(`\\nMonthly NER: $${ner.toFixed(2)}`);\n\n  // Convert NER to per square foot per year\n  const annualNERPerSqFt = ner * 12 / RSF;\n  console.log(`Annual NER per square foot: $${annualNERPerSqFt.toFixed(2)}`);\n  return annualNERPerSqFt;\n};\nexport default calculateNER;","map":{"version":3,"names":["RSF","managementCosts","calculateNER","pkg","term","discountRate","console","log","monthlyRevenues","monthlyCosts","month","monthlyRevenue","monthlyCost","baseRent","preOccupancy","toFixed","recurring","brandingRevenue","furnitureRevenue","plantsRevenue","cablingRevenue","opexCost","wifiCost","brandingCost","plantsCost","furnitureCost","cablingCost","push","cashFlows","map","revenue","index","cashFlow","monthlyRate","npv","reduce","sum","cf","discountedCF","Math","pow","numberOfPayments","ner","annualNERPerSqFt"],"sources":["/Users/yairtitelboim/Documents/Kernel/ALLAPPS/SPEC/version-03/office-leasing-app/src/calculateNER.ts"],"sourcesContent":["import { RSF, managementCosts, packages } from './data';\n\nconst calculateNER = (pkg: string, term: number, discountRate: number): number => {\n  console.log(`\\nCalculating NER for Package ${pkg}, Term: ${term} years, Discount Rate: ${discountRate * 100}%`);\n  console.log(`RSF: ${RSF}`);\n\n  const monthlyRevenues: number[] = [];\n  const monthlyCosts: number[] = [];\n\n  // Calculate monthly revenue and costs for the entire term\n  for (let month = 0; month < term * 12; month++) {\n    let monthlyRevenue = 0;\n    let monthlyCost = 0;\n\n    console.log(`\\nMonth ${month + 1}:`);\n\n    // 1. Calculate Revenue\n    console.log('Calculating Revenue:');\n    \n    // Base rent\n    const baseRent = (managementCosts.preOccupancy['Term Rent'] * RSF) / 12;\n    monthlyRevenue += baseRent;\n    console.log(`  Base Rent: $${baseRent.toFixed(2)}`);\n    \n    // WiFi Revenue\n    monthlyRevenue += managementCosts.recurring['WiFi'];\n    console.log(`  WiFi Revenue: $${managementCosts.recurring['WiFi'].toFixed(2)}`);\n    \n    // Branding/Signage\n    const brandingRevenue = (managementCosts.preOccupancy['Branding/Signage'] * RSF) / (term * 12);\n    monthlyRevenue += brandingRevenue;\n    console.log(`  Branding/Signage: $${brandingRevenue.toFixed(2)}`);\n\n    // Add package-specific items\n    if (pkg === 'B' || pkg === 'C') {\n      const furnitureRevenue = (managementCosts.preOccupancy['Furniture'] * RSF) / (term * 12);\n      monthlyRevenue += furnitureRevenue;\n      console.log(`  Furniture: $${furnitureRevenue.toFixed(2)}`);\n\n      const plantsRevenue = managementCosts.recurring['Plants'] * RSF;\n      monthlyRevenue += plantsRevenue;\n      console.log(`  Plants: $${plantsRevenue.toFixed(2)}`);\n\n      const cablingRevenue = (managementCosts.preOccupancy['Cabling and Drops'] * RSF) / (term * 12);\n      monthlyRevenue += cablingRevenue;\n      console.log(`  Cabling and Drops: $${cablingRevenue.toFixed(2)}`);\n\n      monthlyRevenue += managementCosts.recurring['F&B'];\n      console.log(`  F&B: $${managementCosts.recurring['F&B'].toFixed(2)}`);\n    }\n\n    if (pkg === 'C') {\n      monthlyRevenue += managementCosts.recurring['Dedicated WX'];\n      console.log(`  Dedicated WX: $${managementCosts.recurring['Dedicated WX'].toFixed(2)}`);\n\n      monthlyRevenue += managementCosts.recurring['IT/AV Help Desk'];\n      console.log(`  IT/AV Help Desk: $${managementCosts.recurring['IT/AV Help Desk'].toFixed(2)}`);\n    }\n\n    console.log(`Total Monthly Revenue: $${monthlyRevenue.toFixed(2)}`);\n\n    // 2. Calculate Costs\n    console.log('\\nCalculating Costs:');\n    \n    // OpEx\n    const opexCost = managementCosts.recurring['Opex (monthly)'] * RSF;\n    monthlyCost += opexCost;\n    console.log(`  OpEx: $${opexCost.toFixed(2)}`);\n    \n    // WiFi\n    const wifiCost = managementCosts.recurring['WiFi'] + (managementCosts.preOccupancy['Upfront WiFi'] * RSF) / (term * 12);\n    monthlyCost += wifiCost;\n    console.log(`  WiFi: $${wifiCost.toFixed(2)}`);\n    \n    // Branding/Signage\n    const brandingCost = (managementCosts.preOccupancy['Branding/Signage'] * RSF) / (term * 12);\n    monthlyCost += brandingCost;\n    console.log(`  Branding/Signage: $${brandingCost.toFixed(2)}`);\n\n    // Add package-specific costs\n    if (pkg === 'B' || pkg === 'C') {\n      const plantsCost = managementCosts.recurring['Plants'] * RSF;\n      monthlyCost += plantsCost;\n      console.log(`  Plants: $${plantsCost.toFixed(2)}`);\n\n      monthlyCost += managementCosts.recurring['F&B'];\n      console.log(`  F&B: $${managementCosts.recurring['F&B'].toFixed(2)}`);\n\n      const furnitureCost = (managementCosts.preOccupancy['Furniture'] * RSF) / (term * 12);\n      monthlyCost += furnitureCost;\n      console.log(`  Furniture: $${furnitureCost.toFixed(2)}`);\n\n      const cablingCost = (managementCosts.preOccupancy['Cabling and Drops'] * RSF) / (term * 12);\n      monthlyCost += cablingCost;\n      console.log(`  Cabling and Drops: $${cablingCost.toFixed(2)}`);\n    }\n\n    if (pkg === 'C') {\n      monthlyCost += managementCosts.recurring['Dedicated WX'];\n      console.log(`  Dedicated WX: $${managementCosts.recurring['Dedicated WX'].toFixed(2)}`);\n\n      monthlyCost += managementCosts.recurring['IT/AV Help Desk'];\n      console.log(`  IT/AV Help Desk: $${managementCosts.recurring['IT/AV Help Desk'].toFixed(2)}`);\n    }\n\n    console.log(`Total Monthly Cost: $${monthlyCost.toFixed(2)}`);\n\n    monthlyRevenues.push(monthlyRevenue);\n    monthlyCosts.push(monthlyCost);\n  }\n\n  // 3. Calculate monthly cash flows\n  console.log('\\nCalculating Cash Flows:');\n  const cashFlows = monthlyRevenues.map((revenue, index) => {\n    const cashFlow = revenue - monthlyCosts[index];\n    console.log(`Month ${index + 1} Cash Flow: $${cashFlow.toFixed(2)}`);\n    return cashFlow;\n  });\n\n  // 4. Calculate NPV\n  console.log('\\nCalculating NPV:');\n  const monthlyRate = discountRate / 12;\n  const npv = cashFlows.reduce((sum, cf, index) => {\n    const discountedCF = cf / Math.pow(1 + monthlyRate, index + 1);\n    console.log(`Month ${index + 1} Discounted Cash Flow: $${discountedCF.toFixed(2)}`);\n    return sum + discountedCF;\n  }, 0);\n  console.log(`Total NPV: $${npv.toFixed(2)}`);\n\n  // 5. Calculate NER (monthly payment that would result in the same NPV)\n  const numberOfPayments = term * 12;\n  const ner = (npv * monthlyRate) / (1 - Math.pow(1 + monthlyRate, -numberOfPayments));\n  console.log(`\\nMonthly NER: $${ner.toFixed(2)}`);\n\n  // Convert NER to per square foot per year\n  const annualNERPerSqFt = (ner * 12) / RSF;\n  console.log(`Annual NER per square foot: $${annualNERPerSqFt.toFixed(2)}`);\n\n  return annualNERPerSqFt;\n};\n\nexport default calculateNER;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
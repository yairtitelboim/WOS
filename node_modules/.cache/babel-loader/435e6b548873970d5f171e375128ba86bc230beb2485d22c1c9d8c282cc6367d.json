{"ast":null,"code":"// pricingCalculations.ts\n\nimport { RSF } from './data';\n\n// Constants\nconst MONTHS_PER_YEAR = 12;\nconst MAX_TERM_INCREASE = 0.3;\nconst TERM_INCREASE_PER_YEAR = MAX_TERM_INCREASE / 3;\nconst BASE_TERM = 5;\nexport const calculateMonthlyCost = (pkg, term, managementCosts, packages) => {\n  const {\n    monthlyTotal\n  } = calculateTenantTotal(pkg, term, managementCosts);\n  return monthlyTotal;\n};\nexport const updatePricingMatrix = (isManagementMode, managementCosts, packages, calculateNER) => {\n  const pricing = {};\n  const terms = [2, 3, 4, 5];\n  const pkgs = ['A', 'B', 'C'];\n  terms.forEach(term => {\n    pricing[term.toString()] = {};\n    pkgs.forEach(pkg => {\n      if (isManagementMode) {\n        pricing[term.toString()][pkg] = calculateNER(pkg, term, 0.08);\n      } else {\n        const {\n          monthlyTotal\n        } = calculateTenantTotal(pkg, term, managementCosts);\n        pricing[term.toString()][pkg] = monthlyTotal;\n      }\n    });\n  });\n  return pricing;\n};\nexport const calculateTenantTotal = (pkg, term, managementCosts) => {\n  let monthlyTotal = 0;\n  let oneTimeTotal = 0;\n\n  // Base Rent\n  monthlyTotal += calculateBaseRent(managementCosts.preOccupancy['Term Rent'], term);\n\n  // WiFi\n  monthlyTotal += calculateWifi(term, managementCosts);\n\n  // Other items\n  if (isItemIncluded('Furnished', pkg)) monthlyTotal += calculateFurniture(term, managementCosts);\n  if (isItemIncluded('Plant Programming *', pkg) || pkg === 'B' || pkg === 'C') {\n    const plantCost = calculatePlants(managementCosts);\n    oneTimeTotal += plantCost;\n  }\n  if (isItemIncluded('Food & Beverage Service', pkg)) monthlyTotal += calculateFBAndITAV();\n  if (isItemIncluded('Branding & Signage *', pkg)) {\n    const brandingCost = calculateBrandingSignage(managementCosts);\n    oneTimeTotal += brandingCost;\n  }\n  if (isItemIncluded('Full Digital Infrastructure', pkg)) monthlyTotal += calculateDigitalInfrastructure();\n  if (isItemIncluded('Dedicated Coordinator', pkg)) monthlyTotal += calculateDedicatedCoordinator();\n  if (isItemIncluded('IT/AV Help Desk', pkg)) monthlyTotal += calculateFBAndITAV();\n\n  // Convert one-time costs to monthly\n  monthlyTotal += oneTimeTotal / (term * MONTHS_PER_YEAR);\n  return {\n    monthlyTotal,\n    oneTimeTotal\n  };\n};\nconst calculateBaseRent = (baseCost, term) => {\n  if (term === BASE_TERM) return baseCost * RSF / MONTHS_PER_YEAR;\n  const adjustedBaseCost = baseCost * (1 + (BASE_TERM - term) * TERM_INCREASE_PER_YEAR);\n  return adjustedBaseCost * RSF / MONTHS_PER_YEAR;\n};\nconst calculateWifi = (term, managementCosts) => {\n  const monthlyRate = managementCosts.recurring['WiFi'];\n  const installationCost = managementCosts.preOccupancy['Upfront WiFi'] * RSF;\n  return monthlyRate + installationCost / (term * MONTHS_PER_YEAR);\n};\nconst calculateFurniture = (term, managementCosts) => managementCosts.preOccupancy['Furniture'] * RSF / (term * MONTHS_PER_YEAR);\nconst calculatePlants = managementCosts => managementCosts.preOccupancy['Plants Upfront'] * RSF;\nconst calculateFBAndITAV = () => 1343.50;\nconst calculateBrandingSignage = managementCosts => managementCosts.preOccupancy['Branding/Signage'] * RSF;\nconst calculateDigitalInfrastructure = () => 975;\nconst calculateDedicatedCoordinator = () => 10000;\nconst isItemIncluded = (item, pkg) => {\n  const packageItems = {\n    A: ['Base Rent', 'Enterprise grade WiFi', 'Branding & Signage *'],\n    B: ['Base Rent', 'Enterprise grade WiFi', 'Branding & Signage *', 'Furnished', 'Plant Programming *', 'Full Digital Infrastructure', 'Food & Beverage Service'],\n    C: ['Base Rent', 'Enterprise grade WiFi', 'Branding & Signage *', 'Furnished', 'Plant Programming *', 'Full Digital Infrastructure', 'Food & Beverage Service', 'Dedicated Coordinator', 'IT/AV Help Desk']\n  };\n  return packageItems[pkg].includes(item);\n};\nexport const calculateTotal = (category, managementCosts) => {\n  return Object.values(managementCosts[category]).reduce((total, value) => total + value, 0);\n};\nexport const calculateTermRent = (term, baseTermRent, termPremium) => {\n  if (term === BASE_TERM) return baseTermRent;\n  return baseTermRent * (1 + (BASE_TERM - term) * termPremium);\n};\nexport const formatPrice = price => {\n  const roundedPrice = Math.round(price);\n  if (roundedPrice >= 1000000) {\n    return `$<span class=\"text-6xl\">${(roundedPrice / 1000000).toFixed(1)}</span>M`;\n  } else {\n    return `$<span class=\"text-5xl\">${(roundedPrice / 1000).toFixed(0)}</span>k`;\n  }\n};","map":{"version":3,"names":["RSF","MONTHS_PER_YEAR","MAX_TERM_INCREASE","TERM_INCREASE_PER_YEAR","BASE_TERM","calculateMonthlyCost","pkg","term","managementCosts","packages","monthlyTotal","calculateTenantTotal","updatePricingMatrix","isManagementMode","calculateNER","pricing","terms","pkgs","forEach","toString","oneTimeTotal","calculateBaseRent","preOccupancy","calculateWifi","isItemIncluded","calculateFurniture","plantCost","calculatePlants","calculateFBAndITAV","brandingCost","calculateBrandingSignage","calculateDigitalInfrastructure","calculateDedicatedCoordinator","baseCost","adjustedBaseCost","monthlyRate","recurring","installationCost","item","packageItems","A","B","C","includes","calculateTotal","category","Object","values","reduce","total","value","calculateTermRent","baseTermRent","termPremium","formatPrice","price","roundedPrice","Math","round","toFixed"],"sources":["/Users/yairtitelboim/Documents/Kernel/ALLAPPS/SPEC/version-03/office-leasing-app/src/pricingCalculations.ts"],"sourcesContent":["// pricingCalculations.ts\n\nimport { ManagementCosts, RSF, Package } from './data';\n\n// Constants\nconst MONTHS_PER_YEAR = 12;\nconst MAX_TERM_INCREASE = 0.3;\nconst TERM_INCREASE_PER_YEAR = MAX_TERM_INCREASE / 3;\nconst BASE_TERM = 5;\n\nexport const calculateMonthlyCost = (\n  pkg: string, \n  term: number, \n  managementCosts: ManagementCosts, \n  packages: { [key: string]: Package }\n): number => {\n  const { monthlyTotal } = calculateTenantTotal(pkg, term, managementCosts);\n  return monthlyTotal;\n};\n\nexport const updatePricingMatrix = (\n  isManagementMode: boolean, \n  managementCosts: ManagementCosts, \n  packages: { [key: string]: Package },\n  calculateNER: (pkg: string, term: number, discountRate: number) => number\n): { [key: string]: { [key: string]: number } } => {\n  const pricing: { [key: string]: { [key: string]: number } } = {};\n  const terms = [2, 3, 4, 5];\n  const pkgs = ['A', 'B', 'C'];\n\n  terms.forEach(term => {\n    pricing[term.toString()] = {};\n    pkgs.forEach(pkg => {\n      if (isManagementMode) {\n        pricing[term.toString()][pkg] = calculateNER(pkg, term, 0.08);\n      } else {\n        const { monthlyTotal } = calculateTenantTotal(pkg, term, managementCosts);\n        pricing[term.toString()][pkg] = monthlyTotal;\n      }\n    });\n  });\n\n  return pricing;\n};\n\nexport const calculateTenantTotal = (pkg: string, term: number, managementCosts: ManagementCosts) => {\n  let monthlyTotal = 0;\n  let oneTimeTotal = 0;\n\n  // Base Rent\n  monthlyTotal += calculateBaseRent(managementCosts.preOccupancy['Term Rent'], term);\n\n  // WiFi\n  monthlyTotal += calculateWifi(term, managementCosts);\n\n  // Other items\n  if (isItemIncluded('Furnished', pkg)) monthlyTotal += calculateFurniture(term, managementCosts);\n  if (isItemIncluded('Plant Programming *', pkg) || pkg === 'B' || pkg === 'C') {\n    const plantCost = calculatePlants(managementCosts);\n    oneTimeTotal += plantCost;\n  }\n  if (isItemIncluded('Food & Beverage Service', pkg)) monthlyTotal += calculateFBAndITAV();\n  if (isItemIncluded('Branding & Signage *', pkg)) {\n    const brandingCost = calculateBrandingSignage(managementCosts);\n    oneTimeTotal += brandingCost;\n  }\n  if (isItemIncluded('Full Digital Infrastructure', pkg)) monthlyTotal += calculateDigitalInfrastructure();\n  if (isItemIncluded('Dedicated Coordinator', pkg)) monthlyTotal += calculateDedicatedCoordinator();\n  if (isItemIncluded('IT/AV Help Desk', pkg)) monthlyTotal += calculateFBAndITAV();\n\n  // Convert one-time costs to monthly\n  monthlyTotal += oneTimeTotal / (term * MONTHS_PER_YEAR);\n\n  return { monthlyTotal, oneTimeTotal };\n};\n\nconst calculateBaseRent = (baseCost: number, term: number): number => {\n  if (term === BASE_TERM) return (baseCost * RSF) / MONTHS_PER_YEAR;\n  const adjustedBaseCost = baseCost * (1 + (BASE_TERM - term) * TERM_INCREASE_PER_YEAR);\n  return (adjustedBaseCost * RSF) / MONTHS_PER_YEAR;\n};\n\nconst calculateWifi = (term: number, managementCosts: ManagementCosts): number => {\n  const monthlyRate = managementCosts.recurring['WiFi'];\n  const installationCost = managementCosts.preOccupancy['Upfront WiFi'] * RSF;\n  return monthlyRate + (installationCost / (term * MONTHS_PER_YEAR));\n};\n\nconst calculateFurniture = (term: number, managementCosts: ManagementCosts): number => \n  (managementCosts.preOccupancy['Furniture'] * RSF) / (term * MONTHS_PER_YEAR);\n\nconst calculatePlants = (managementCosts: ManagementCosts): number => \n  managementCosts.preOccupancy['Plants Upfront'] * RSF;\n\nconst calculateFBAndITAV = (): number => 1343.50;\n\nconst calculateBrandingSignage = (managementCosts: ManagementCosts): number => \n  managementCosts.preOccupancy['Branding/Signage'] * RSF;\n\nconst calculateDigitalInfrastructure = (): number => 975;\n\nconst calculateDedicatedCoordinator = (): number => 10000;\n\nconst isItemIncluded = (item: string, pkg: string): boolean => {\n  const packageItems = {\n    A: ['Base Rent', 'Enterprise grade WiFi', 'Branding & Signage *'],\n    B: ['Base Rent', 'Enterprise grade WiFi', 'Branding & Signage *', 'Furnished', 'Plant Programming *', 'Full Digital Infrastructure', 'Food & Beverage Service'],\n    C: ['Base Rent', 'Enterprise grade WiFi', 'Branding & Signage *', 'Furnished', 'Plant Programming *', 'Full Digital Infrastructure', 'Food & Beverage Service', 'Dedicated Coordinator', 'IT/AV Help Desk']\n  };\n  return packageItems[pkg as keyof typeof packageItems].includes(item);\n};\n\nexport const calculateTotal = (category: 'preOccupancy' | 'recurring', managementCosts: ManagementCosts): number => {\n  return Object.values(managementCosts[category]).reduce((total, value) => total + value, 0);\n};\n\nexport const calculateTermRent = (term: number, baseTermRent: number, termPremium: number): number => {\n  if (term === BASE_TERM) return baseTermRent;\n  return baseTermRent * (1 + ((BASE_TERM - term) * termPremium));\n};\n\nexport const formatPrice = (price: number): string => {\n  const roundedPrice = Math.round(price);\n  if (roundedPrice >= 1000000) {\n    return `$<span class=\"text-6xl\">${(roundedPrice / 1000000).toFixed(1)}</span>M`;\n  } else {\n    return `$<span class=\"text-5xl\">${(roundedPrice / 1000).toFixed(0)}</span>k`;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
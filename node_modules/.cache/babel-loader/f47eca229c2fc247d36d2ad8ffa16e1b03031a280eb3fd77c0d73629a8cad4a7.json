{"ast":null,"code":"var _jsxFileName = \"/Users/yairtitelboim/Documents/Kernel/ALLAPPS/SPEC/version-03/office-leasing-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// ... [previous type definitions and data remain the same]\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedPackage, setSelectedPackage] = useState(null);\n  const [selectedTerm, setSelectedTerm] = useState(null);\n  const handleSelection = (pkg, term) => {\n    setSelectedPackage(pkg);\n    setSelectedTerm(term);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex p-4 font-['Inter'] font-black\",\n    style: {\n      color: '#A82229'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-2/3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-3 gap-1 mb-4\",\n        children: Object.entries(packages).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border border-[#A82229] p-2 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-4xl font-bold\",\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: value.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-4 gap-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-bold\",\n          children: \"Term\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), Object.keys(packages).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-bold text-center\"\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)), Object.entries(pricing).map(([term, prices]) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `font-bold text-2xl ${parseInt(term) === 5 ? 'opacity-50' : ''}`,\n            children: [\"Year \", term.padStart(2, '0')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), Object.entries(prices).map(([pkg, price]) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `p-2 ${selectedPackage === pkg && selectedTerm === parseInt(term) ? 'bg-[#A82229]' : `bg-[#A82229]`} text-white text-2xl font-bold opacity-${100 - (parseInt(term) - 2) * 20}`,\n            onClick: () => handleSelection(pkg, parseInt(term)),\n            children: [\"$\", price / 1000, \"k\"]\n          }, `${term}-${pkg}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this))]\n        }, term, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/3 pl-4\",\n      children: /*#__PURE__*/_jsxDEV(Sidebar, {\n        selectedPackage: selectedPackage,\n        selectedTerm: selectedTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n// ... [Sidebar component remains the same]\n_s(App, \"OKQGqNPw5qnykBPPL/qOoy1W/YE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","selectedPackage","setSelectedPackage","selectedTerm","setSelectedTerm","handleSelection","pkg","term","className","style","color","children","Object","entries","packages","map","key","value","fileName","_jsxFileName","lineNumber","columnNumber","description","keys","pricing","prices","Fragment","parseInt","padStart","price","onClick","Sidebar","_c","$RefreshReg$"],"sources":["/Users/yairtitelboim/Documents/Kernel/ALLAPPS/SPEC/version-03/office-leasing-app/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\n// ... [previous type definitions and data remain the same]\n\nconst App: React.FC = () => {\n  const [selectedPackage, setSelectedPackage] = useState<string | null>(null);\n  const [selectedTerm, setSelectedTerm] = useState<number | null>(null);\n\n  const handleSelection = (pkg: string, term: number) => {\n    setSelectedPackage(pkg);\n    setSelectedTerm(term);\n  };\n\n  return (\n    <div className=\"flex p-4 font-['Inter'] font-black\" style={{ color: '#A82229' }}>\n      <div className=\"w-2/3\">\n        <div className=\"grid grid-cols-3 gap-1 mb-4\">\n          {Object.entries(packages).map(([key, value]) => (\n            <div key={key} className=\"border border-[#A82229] p-2 text-center\">\n              <h3 className=\"text-4xl font-bold\">{key}</h3>\n              <p>{value.description}</p>\n            </div>\n          ))}\n        </div>\n        <div className=\"grid grid-cols-4 gap-1\">\n          <div className=\"font-bold\">Term</div>\n          {Object.keys(packages).map((key) => (\n            <div key={key} className=\"font-bold text-center\"></div>\n          ))}\n          {Object.entries(pricing).map(([term, prices]) => (\n            <React.Fragment key={term}>\n              <div className={`font-bold text-2xl ${parseInt(term) === 5 ? 'opacity-50' : ''}`}>Year {term.padStart(2, '0')}</div>\n              {Object.entries(prices).map(([pkg, price]) => (\n                <button\n                  key={`${term}-${pkg}`}\n                  className={`p-2 ${selectedPackage === pkg && selectedTerm === parseInt(term) ? 'bg-[#A82229]' : `bg-[#A82229]`} text-white text-2xl font-bold opacity-${100 - (parseInt(term) - 2) * 20}`}\n                  onClick={() => handleSelection(pkg, parseInt(term))}\n                >\n                  ${price / 1000}k\n                </button>\n              ))}\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n      <div className=\"w-1/3 pl-4\">\n        <Sidebar selectedPackage={selectedPackage} selectedTerm={selectedTerm} />\n      </div>\n    </div>\n  );\n};\n\n// ... [Sidebar component remains the same]\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
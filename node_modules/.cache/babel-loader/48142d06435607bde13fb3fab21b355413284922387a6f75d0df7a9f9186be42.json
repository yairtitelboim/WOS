{"ast":null,"code":"const calculateNER = (pkg, term, discountRate) => {\n  let totalRevenue = 0;\n  let totalCost = 0;\n\n  // Calculate for one month to simplify debugging\n  let monthlyRevenue = managementCosts.preOccupancy['Term Rent'] * RSF / 12;\n  let monthlyCost = managementCosts.recurring['Opex (monthly)'] * RSF;\n\n  // Add package-specific items\n  if (pkg === 'B' || pkg === 'C') {\n    monthlyRevenue += managementCosts.recurring['Plants'] * RSF;\n    monthlyRevenue += managementCosts.recurring['F&B'];\n    monthlyCost += managementCosts.recurring['Plants'] * RSF;\n    monthlyCost += managementCosts.recurring['F&B'];\n  }\n  if (pkg === 'C') {\n    monthlyRevenue += managementCosts.recurring['Dedicated WX'];\n    monthlyRevenue += managementCosts.recurring['IT/AV Help Desk'];\n    monthlyCost += managementCosts.recurring['Dedicated WX'];\n    monthlyCost += managementCosts.recurring['IT/AV Help Desk'];\n  }\n\n  // Add one-time costs spread over the term\n  monthlyRevenue += managementCosts.preOccupancy['Branding/Signage'] * RSF / (term * 12);\n  monthlyCost += managementCosts.preOccupancy['Branding/Signage'] * RSF / (term * 12);\n  monthlyCost += managementCosts.preOccupancy['Upfront WiFi'] * RSF / (term * 12);\n  if (pkg === 'B' || pkg === 'C') {\n    monthlyCost += managementCosts.preOccupancy['Furniture'] * RSF / (term * 12);\n    monthlyCost += managementCosts.preOccupancy['Cabling and Drops'] * RSF / (term * 12);\n  }\n  console.log(`Package ${pkg}, Term ${term} years:`);\n  console.log(`Monthly Revenue: $${monthlyRevenue.toFixed(2)}`);\n  console.log(`Monthly Cost: $${monthlyCost.toFixed(2)}`);\n  const monthlyCashFlow = monthlyRevenue - monthlyCost;\n  console.log(`Monthly Cash Flow: $${monthlyCashFlow.toFixed(2)}`);\n  const annualCashFlow = monthlyCashFlow * 12;\n  console.log(`Annual Cash Flow: $${annualCashFlow.toFixed(2)}`);\n  const ner = annualCashFlow / RSF;\n  console.log(`NER per sq ft per year: $${ner.toFixed(2)}`);\n  return ner;\n};","map":{"version":3,"names":["calculateNER","pkg","term","discountRate","totalRevenue","totalCost","monthlyRevenue","managementCosts","preOccupancy","RSF","monthlyCost","recurring","console","log","toFixed","monthlyCashFlow","annualCashFlow","ner"],"sources":["/Users/yairtitelboim/Documents/Kernel/ALLAPPS/SPEC/version-03/office-leasing-app/src/calculateNER.ts"],"sourcesContent":["const calculateNER = (pkg: string, term: number, discountRate: number): number => {\n  let totalRevenue = 0;\n  let totalCost = 0;\n\n  // Calculate for one month to simplify debugging\n  let monthlyRevenue = (managementCosts.preOccupancy['Term Rent'] * RSF) / 12;\n  let monthlyCost = managementCosts.recurring['Opex (monthly)'] * RSF;\n\n  // Add package-specific items\n  if (pkg === 'B' || pkg === 'C') {\n    monthlyRevenue += managementCosts.recurring['Plants'] * RSF;\n    monthlyRevenue += managementCosts.recurring['F&B'];\n    monthlyCost += managementCosts.recurring['Plants'] * RSF;\n    monthlyCost += managementCosts.recurring['F&B'];\n  }\n\n  if (pkg === 'C') {\n    monthlyRevenue += managementCosts.recurring['Dedicated WX'];\n    monthlyRevenue += managementCosts.recurring['IT/AV Help Desk'];\n    monthlyCost += managementCosts.recurring['Dedicated WX'];\n    monthlyCost += managementCosts.recurring['IT/AV Help Desk'];\n  }\n\n  // Add one-time costs spread over the term\n  monthlyRevenue += (managementCosts.preOccupancy['Branding/Signage'] * RSF) / (term * 12);\n  monthlyCost += (managementCosts.preOccupancy['Branding/Signage'] * RSF) / (term * 12);\n  monthlyCost += (managementCosts.preOccupancy['Upfront WiFi'] * RSF) / (term * 12);\n\n  if (pkg === 'B' || pkg === 'C') {\n    monthlyCost += (managementCosts.preOccupancy['Furniture'] * RSF) / (term * 12);\n    monthlyCost += (managementCosts.preOccupancy['Cabling and Drops'] * RSF) / (term * 12);\n  }\n\n  console.log(`Package ${pkg}, Term ${term} years:`);\n  console.log(`Monthly Revenue: $${monthlyRevenue.toFixed(2)}`);\n  console.log(`Monthly Cost: $${monthlyCost.toFixed(2)}`);\n\n  const monthlyCashFlow = monthlyRevenue - monthlyCost;\n  console.log(`Monthly Cash Flow: $${monthlyCashFlow.toFixed(2)}`);\n\n  const annualCashFlow = monthlyCashFlow * 12;\n  console.log(`Annual Cash Flow: $${annualCashFlow.toFixed(2)}`);\n\n  const ner = annualCashFlow / RSF;\n  console.log(`NER per sq ft per year: $${ner.toFixed(2)}`);\n\n  return ner;\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAGA,CAACC,GAAW,EAAEC,IAAY,EAAEC,YAAoB,KAAa;EAChF,IAAIC,YAAY,GAAG,CAAC;EACpB,IAAIC,SAAS,GAAG,CAAC;;EAEjB;EACA,IAAIC,cAAc,GAAIC,eAAe,CAACC,YAAY,CAAC,WAAW,CAAC,GAAGC,GAAG,GAAI,EAAE;EAC3E,IAAIC,WAAW,GAAGH,eAAe,CAACI,SAAS,CAAC,gBAAgB,CAAC,GAAGF,GAAG;;EAEnE;EACA,IAAIR,GAAG,KAAK,GAAG,IAAIA,GAAG,KAAK,GAAG,EAAE;IAC9BK,cAAc,IAAIC,eAAe,CAACI,SAAS,CAAC,QAAQ,CAAC,GAAGF,GAAG;IAC3DH,cAAc,IAAIC,eAAe,CAACI,SAAS,CAAC,KAAK,CAAC;IAClDD,WAAW,IAAIH,eAAe,CAACI,SAAS,CAAC,QAAQ,CAAC,GAAGF,GAAG;IACxDC,WAAW,IAAIH,eAAe,CAACI,SAAS,CAAC,KAAK,CAAC;EACjD;EAEA,IAAIV,GAAG,KAAK,GAAG,EAAE;IACfK,cAAc,IAAIC,eAAe,CAACI,SAAS,CAAC,cAAc,CAAC;IAC3DL,cAAc,IAAIC,eAAe,CAACI,SAAS,CAAC,iBAAiB,CAAC;IAC9DD,WAAW,IAAIH,eAAe,CAACI,SAAS,CAAC,cAAc,CAAC;IACxDD,WAAW,IAAIH,eAAe,CAACI,SAAS,CAAC,iBAAiB,CAAC;EAC7D;;EAEA;EACAL,cAAc,IAAKC,eAAe,CAACC,YAAY,CAAC,kBAAkB,CAAC,GAAGC,GAAG,IAAKP,IAAI,GAAG,EAAE,CAAC;EACxFQ,WAAW,IAAKH,eAAe,CAACC,YAAY,CAAC,kBAAkB,CAAC,GAAGC,GAAG,IAAKP,IAAI,GAAG,EAAE,CAAC;EACrFQ,WAAW,IAAKH,eAAe,CAACC,YAAY,CAAC,cAAc,CAAC,GAAGC,GAAG,IAAKP,IAAI,GAAG,EAAE,CAAC;EAEjF,IAAID,GAAG,KAAK,GAAG,IAAIA,GAAG,KAAK,GAAG,EAAE;IAC9BS,WAAW,IAAKH,eAAe,CAACC,YAAY,CAAC,WAAW,CAAC,GAAGC,GAAG,IAAKP,IAAI,GAAG,EAAE,CAAC;IAC9EQ,WAAW,IAAKH,eAAe,CAACC,YAAY,CAAC,mBAAmB,CAAC,GAAGC,GAAG,IAAKP,IAAI,GAAG,EAAE,CAAC;EACxF;EAEAU,OAAO,CAACC,GAAG,CAAC,WAAWZ,GAAG,UAAUC,IAAI,SAAS,CAAC;EAClDU,OAAO,CAACC,GAAG,CAAC,qBAAqBP,cAAc,CAACQ,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;EAC7DF,OAAO,CAACC,GAAG,CAAC,kBAAkBH,WAAW,CAACI,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;EAEvD,MAAMC,eAAe,GAAGT,cAAc,GAAGI,WAAW;EACpDE,OAAO,CAACC,GAAG,CAAC,uBAAuBE,eAAe,CAACD,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;EAEhE,MAAME,cAAc,GAAGD,eAAe,GAAG,EAAE;EAC3CH,OAAO,CAACC,GAAG,CAAC,sBAAsBG,cAAc,CAACF,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;EAE9D,MAAMG,GAAG,GAAGD,cAAc,GAAGP,GAAG;EAChCG,OAAO,CAACC,GAAG,CAAC,4BAA4BI,GAAG,CAACH,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;EAEzD,OAAOG,GAAG;AACZ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
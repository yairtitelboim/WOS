{"ast":null,"code":"// Import necessary functions and types\nimport { RSF } from './data';\n\n// Helper function to calculate monthly cost\nexport const calculateMonthlyCost = (pkg, term, managementCosts, packages) => {\n  let monthlyTotal = 0;\n  let oneTimeTotal = 0;\n  const monthsInTerm = term * 12;\n\n  // Base Rent calculation\n  const baseTermRent = managementCosts.preOccupancy['Term Rent'];\n  const termPremium = 0.1; // 10% default term premium\n  const adjustedBaseRent = term === 5 ? baseTermRent : baseTermRent * (1 + (5 - term) * termPremium);\n  monthlyTotal += (adjustedBaseRent + managementCosts.recurring['Opex (monthly)']) * RSF / 12;\n\n  // WiFi calculation\n  monthlyTotal += managementCosts.recurring['WiFi'];\n  monthlyTotal += managementCosts.preOccupancy['Upfront WiFi'] * RSF / monthsInTerm;\n\n  // Branding/Signage (included in all packages)\n  oneTimeTotal += managementCosts.preOccupancy['Branding/Signage'] * RSF;\n\n  // Package-specific calculations\n  const packageItems = packages[pkg].items;\n  if (packageItems.includes('• Furnished')) {\n    monthlyTotal += managementCosts.preOccupancy['Furniture'] * RSF / monthsInTerm;\n  }\n  if (packageItems.includes('• Plant Programming')) {\n    oneTimeTotal += managementCosts.preOccupancy['Plants Upfront'] * RSF;\n  }\n  if (packageItems.includes('• Food & Beverage Service')) {\n    monthlyTotal += 1343.50; // Fixed cost as per sidebar\n  }\n  if (packageItems.includes('• Full Digital Infrastructure')) {\n    monthlyTotal += 975; // Fixed cost as per sidebar\n  }\n  if (packageItems.includes('• Dedicated WX Coordinator')) {\n    monthlyTotal += 10000 / 12; // $10,000 annually, divided by 12 for monthly cost\n  }\n  if (packageItems.includes('• IT/AV Help Desk')) {\n    monthlyTotal += 1343.50; // Fixed cost as per sidebar\n  }\n\n  // Add the amortized one-time costs to the monthly total\n  monthlyTotal += oneTimeTotal / monthsInTerm;\n  return monthlyTotal;\n};\n\n// Update this function in PricingMatrix component\nexport const updatePricingMatrix = (isManagementMode, managementCosts, packages, calculateNER) => {\n  const pricing = {};\n  const terms = [2, 3, 4, 5];\n  const pkgs = ['A', 'B', 'C'];\n  terms.forEach(term => {\n    pricing[term.toString()] = {};\n    pkgs.forEach(pkg => {\n      if (isManagementMode) {\n        pricing[term.toString()][pkg] = calculateNER(pkg, term, 0.08); // Use the same discount rate as in Sidebar\n      } else {\n        pricing[term.toString()][pkg] = calculateMonthlyCost(pkg, term, managementCosts, packages);\n      }\n    });\n  });\n  return pricing;\n};","map":{"version":3,"names":["RSF","calculateMonthlyCost","pkg","term","managementCosts","packages","monthlyTotal","oneTimeTotal","monthsInTerm","baseTermRent","preOccupancy","termPremium","adjustedBaseRent","recurring","packageItems","items","includes","updatePricingMatrix","isManagementMode","calculateNER","pricing","terms","pkgs","forEach","toString"],"sources":["/Users/yairtitelboim/Documents/Kernel/ALLAPPS/SPEC/version-03/office-leasing-app/src/pricingCalculations.ts"],"sourcesContent":["// Import necessary functions and types\nimport { ManagementCosts, RSF, Package, calculateMonthlyTotal } from './data';\n\n// Helper function to calculate monthly cost\nexport const calculateMonthlyCost = (\n    pkg: string, \n    term: number, \n    managementCosts: ManagementCosts, \n    packages: { [key: string]: Package }\n  ): number => {\n  let monthlyTotal = 0;\n  let oneTimeTotal = 0;\n  const monthsInTerm = term * 12;\n\n  // Base Rent calculation\n  const baseTermRent = managementCosts.preOccupancy['Term Rent'];\n  const termPremium = 0.1; // 10% default term premium\n  const adjustedBaseRent = term === 5 ? baseTermRent : baseTermRent * (1 + ((5 - term) * termPremium));\n  monthlyTotal += (adjustedBaseRent + managementCosts.recurring['Opex (monthly)']) * RSF / 12;\n\n  // WiFi calculation\n  monthlyTotal += managementCosts.recurring['WiFi'];\n  monthlyTotal += (managementCosts.preOccupancy['Upfront WiFi'] * RSF) / monthsInTerm;\n\n  // Branding/Signage (included in all packages)\n  oneTimeTotal += managementCosts.preOccupancy['Branding/Signage'] * RSF;\n\n  // Package-specific calculations\n  const packageItems = packages[pkg].items;\n  \n  if (packageItems.includes('• Furnished')) {\n    monthlyTotal += (managementCosts.preOccupancy['Furniture'] * RSF) / monthsInTerm;\n  }\n  \n  if (packageItems.includes('• Plant Programming')) {\n    oneTimeTotal += managementCosts.preOccupancy['Plants Upfront'] * RSF;\n  }\n  \n  if (packageItems.includes('• Food & Beverage Service')) {\n    monthlyTotal += 1343.50; // Fixed cost as per sidebar\n  }\n  \n  if (packageItems.includes('• Full Digital Infrastructure')) {\n    monthlyTotal += 975; // Fixed cost as per sidebar\n  }\n  \n  if (packageItems.includes('• Dedicated WX Coordinator')) {\n    monthlyTotal += 10000 / 12; // $10,000 annually, divided by 12 for monthly cost\n  }\n\n  if (packageItems.includes('• IT/AV Help Desk')) {\n    monthlyTotal += 1343.50; // Fixed cost as per sidebar\n  }\n\n  // Add the amortized one-time costs to the monthly total\n  monthlyTotal += oneTimeTotal / monthsInTerm;\n\n  return monthlyTotal;\n};\n\n// Update this function in PricingMatrix component\nexport const updatePricingMatrix = (\n    isManagementMode: boolean, \n    managementCosts: ManagementCosts, \n    packages: { [key: string]: Package },\n    calculateNER: (pkg: string, term: number, discountRate: number) => number\n  ): { [key: string]: { [key: string]: number } } => {\n  const pricing: { [key: string]: { [key: string]: number } } = {};\n  const terms = [2, 3, 4, 5];\n  const pkgs = ['A', 'B', 'C'];\n\n  terms.forEach(term => {\n    pricing[term.toString()] = {};\n    pkgs.forEach(pkg => {\n      if (isManagementMode) {\n        pricing[term.toString()][pkg] = calculateNER(pkg, term, 0.08); // Use the same discount rate as in Sidebar\n      } else {\n        pricing[term.toString()][pkg] = calculateMonthlyCost(pkg, term, managementCosts, packages);\n      }\n    });\n  });\n\n  return pricing;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// Import necessary functions and types\nimport { RSF } from './data';\n\n// Helper function to calculate monthly cost\nexport const calculateMonthlyCost = (pkg, term, managementCosts, packages) => {\n  let monthlyTotal = 0;\n\n  // Base Rent calculation\n  const baseTermRent = managementCosts.preOccupancy['Term Rent'];\n  const termPremium = 0.1; // 10% default term premium\n  const adjustedBaseRent = term === 5 ? baseTermRent : baseTermRent * (1 + (5 - term) * termPremium);\n  monthlyTotal += (adjustedBaseRent + managementCosts.recurring['Opex (monthly)']) * RSF / 12;\n\n  // WiFi calculation\n  const monthlyWiFi = managementCosts.recurring['WiFi'];\n  const wifiInstallation = managementCosts.preOccupancy['Upfront WiFi'] * RSF / (term * 12);\n  monthlyTotal += monthlyWiFi + wifiInstallation;\n\n  // Package-specific calculations\n  const packageItems = packages[pkg].items;\n  if (packageItems.includes('• Furnished')) {\n    monthlyTotal += managementCosts.preOccupancy['Furniture'] * RSF / (term * 12);\n  }\n  if (packageItems.includes('• Plant Programming')) {\n    monthlyTotal += managementCosts.preOccupancy['Plants Upfront'] * RSF / (term * 12);\n  }\n  if (packageItems.includes('• Food & Beverage Service')) {\n    monthlyTotal += managementCosts.recurring['F&B'];\n  }\n  if (packageItems.includes('• Full Digital Infrastructure')) {\n    monthlyTotal += managementCosts.preOccupancy['Cabling and Drops'] * RSF / (term * 12);\n  }\n  if (packageItems.includes('• Dedicated WX Coordinator')) {\n    monthlyTotal += managementCosts.recurring['Dedicated WX'];\n  }\n  if (packageItems.includes('• IT/AV Help Desk')) {\n    monthlyTotal += managementCosts.recurring['IT/AV Help Desk'] * RSF;\n  }\n\n  // Branding/Signage (included in all packages)\n  monthlyTotal += managementCosts.preOccupancy['Branding/Signage'] * RSF / (term * 12);\n  return monthlyTotal;\n};\n\n// Update this function in PricingMatrix component\nconst updatePricingMatrix = (isManagementMode, managementCosts, packages, calculateNER) => {\n  const pricing = {};\n  const terms = [2, 3, 4, 5];\n  const pkgs = ['A', 'B', 'C'];\n  terms.forEach(term => {\n    pricing[term.toString()] = {};\n    pkgs.forEach(pkg => {\n      if (isManagementMode) {\n        pricing[term.toString()][pkg] = calculateNER(pkg, term, 0.08); // Use the same discount rate as in Sidebar\n      } else {\n        pricing[term.toString()][pkg] = calculateMonthlyCost(pkg, term, managementCosts, packages);\n      }\n    });\n  });\n  return pricing;\n};","map":{"version":3,"names":["RSF","calculateMonthlyCost","pkg","term","managementCosts","packages","monthlyTotal","baseTermRent","preOccupancy","termPremium","adjustedBaseRent","recurring","monthlyWiFi","wifiInstallation","packageItems","items","includes","updatePricingMatrix","isManagementMode","calculateNER","pricing","terms","pkgs","forEach","toString"],"sources":["/Users/yairtitelboim/Documents/Kernel/ALLAPPS/SPEC/version-03/office-leasing-app/src/pricingCalculations.ts"],"sourcesContent":["// Import necessary functions and types\nimport { ManagementCosts, RSF, Package } from './data';\n\n// Helper function to calculate monthly cost\nexport const calculateMonthlyCost = (\n    pkg: string, \n    term: number, \n    managementCosts: ManagementCosts, \n    packages: { [key: string]: Package }\n  ): number => {\n  let monthlyTotal = 0;\n\n  // Base Rent calculation\n  const baseTermRent = managementCosts.preOccupancy['Term Rent'];\n  const termPremium = 0.1; // 10% default term premium\n  const adjustedBaseRent = term === 5 ? baseTermRent : baseTermRent * (1 + ((5 - term) * termPremium));\n  monthlyTotal += (adjustedBaseRent + managementCosts.recurring['Opex (monthly)']) * RSF / 12;\n\n  // WiFi calculation\n  const monthlyWiFi = managementCosts.recurring['WiFi'];\n  const wifiInstallation = managementCosts.preOccupancy['Upfront WiFi'] * RSF / (term * 12);\n  monthlyTotal += monthlyWiFi + wifiInstallation;\n\n  // Package-specific calculations\n  const packageItems = packages[pkg].items;\n  \n  if (packageItems.includes('• Furnished')) {\n    monthlyTotal += (managementCosts.preOccupancy['Furniture'] * RSF) / (term * 12);\n  }\n  \n  if (packageItems.includes('• Plant Programming')) {\n    monthlyTotal += (managementCosts.preOccupancy['Plants Upfront'] * RSF) / (term * 12);\n  }\n  \n  if (packageItems.includes('• Food & Beverage Service')) {\n    monthlyTotal += managementCosts.recurring['F&B'];\n  }\n  \n  if (packageItems.includes('• Full Digital Infrastructure')) {\n    monthlyTotal += (managementCosts.preOccupancy['Cabling and Drops'] * RSF) / (term * 12);\n  }\n  \n  if (packageItems.includes('• Dedicated WX Coordinator')) {\n    monthlyTotal += managementCosts.recurring['Dedicated WX'];\n  }\n  \n  if (packageItems.includes('• IT/AV Help Desk')) {\n    monthlyTotal += managementCosts.recurring['IT/AV Help Desk'] * RSF;\n  }\n\n  // Branding/Signage (included in all packages)\n  monthlyTotal += (managementCosts.preOccupancy['Branding/Signage'] * RSF) / (term * 12);\n\n  return monthlyTotal;\n};\n\n// Update this function in PricingMatrix component\nconst updatePricingMatrix = (\n  isManagementMode: boolean, \n  managementCosts: ManagementCosts, \n  packages: { [key: string]: Package },\n  calculateNER: (pkg: string, term: number, discountRate: number) => number\n): { [key: string]: { [key: string]: number } } => {\n  const pricing: { [key: string]: { [key: string]: number } } = {};\n  const terms = [2, 3, 4, 5];\n  const pkgs = ['A', 'B', 'C'];\n\n  terms.forEach(term => {\n    pricing[term.toString()] = {};\n    pkgs.forEach(pkg => {\n      if (isManagementMode) {\n        pricing[term.toString()][pkg] = calculateNER(pkg, term, 0.08); // Use the same discount rate as in Sidebar\n      } else {\n        pricing[term.toString()][pkg] = calculateMonthlyCost(pkg, term, managementCosts, packages);\n      }\n    });\n  });\n\n  return pricing;\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
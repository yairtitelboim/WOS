{"ast":null,"code":"import { RSF, managementCosts } from './data';\nconst calculateDCF = (cashFlows, discountRate) => {\n  return cashFlows.map((cf, index) => cf / Math.pow(1 + discountRate, index + 1));\n};\nconst calculateNPV = dcf => {\n  return dcf.reduce((sum, value) => sum + value, 0);\n};\nconst calculatePMT = (rate, nper, pv) => {\n  return pv * rate / (1 - Math.pow(1 + rate, -nper));\n};\nconst calculateNER = (term, discountRate) => {\n  // Calculate total ongoing monthly costs per RSF\n  const ongoingMonthlyCostPerRSF = Object.values(managementCosts.recurring).reduce((total, value) => {\n    if (typeof value === 'number') {\n      return total + value;\n    }\n    return total;\n  }, 0);\n\n  // Calculate annual cash flow based on ongoing costs\n  const annualCashFlow = ongoingMonthlyCostPerRSF * 12 * RSF;\n\n  // Generate cash flows for the term (for ongoing payments only)\n  const cashFlows = Array(term).fill(annualCashFlow);\n\n  // Calculate DCF\n  const dcf = calculateDCF(cashFlows, discountRate);\n\n  // Calculate NPV\n  const npv = calculateNPV(dcf);\n\n  // Calculate PMT (NER) from NPV\n  const monthlyRate = discountRate / 12;\n  const numberOfPayments = term * 12;\n  const ner = calculatePMT(monthlyRate, numberOfPayments, npv);\n\n  // Convert NER to per square foot\n  return ner / RSF;\n};\nexport default calculateNER;","map":{"version":3,"names":["RSF","managementCosts","calculateDCF","cashFlows","discountRate","map","cf","index","Math","pow","calculateNPV","dcf","reduce","sum","value","calculatePMT","rate","nper","pv","calculateNER","term","ongoingMonthlyCostPerRSF","Object","values","recurring","total","annualCashFlow","Array","fill","npv","monthlyRate","numberOfPayments","ner"],"sources":["/Users/yairtitelboim/Documents/Kernel/ALLAPPS/SPEC/version-03/office-leasing-app/src/calculateNER.ts"],"sourcesContent":["import { RSF, managementCosts } from './data';\n\nconst calculateDCF = (cashFlows: number[], discountRate: number): number[] => {\n  return cashFlows.map((cf, index) => cf / Math.pow(1 + discountRate, index + 1));\n};\n\nconst calculateNPV = (dcf: number[]): number => {\n  return dcf.reduce((sum, value) => sum + value, 0);\n};\n\nconst calculatePMT = (rate: number, nper: number, pv: number): number => {\n  return (pv * rate) / (1 - Math.pow(1 + rate, -nper));\n};\n\nconst calculateNER = (term: number, discountRate: number): number => {\n  // Calculate total ongoing monthly costs per RSF\n  const ongoingMonthlyCostPerRSF = Object.values(managementCosts.recurring).reduce((total, value) => {\n    if (typeof value === 'number') {\n      return total + value;\n    }\n    return total;\n  }, 0);\n\n  // Calculate annual cash flow based on ongoing costs\n  const annualCashFlow = ongoingMonthlyCostPerRSF * 12 * RSF;\n\n  // Generate cash flows for the term (for ongoing payments only)\n  const cashFlows = Array(term).fill(annualCashFlow);\n\n  // Calculate DCF\n  const dcf = calculateDCF(cashFlows, discountRate);\n\n  // Calculate NPV\n  const npv = calculateNPV(dcf);\n\n  // Calculate PMT (NER) from NPV\n  const monthlyRate = discountRate / 12;\n  const numberOfPayments = term * 12;\n  const ner = calculatePMT(monthlyRate, numberOfPayments, npv);\n\n  // Convert NER to per square foot\n  return ner / RSF;\n};\n\nexport default calculateNER;\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,eAAe,QAAQ,QAAQ;AAE7C,MAAMC,YAAY,GAAGA,CAACC,SAAmB,EAAEC,YAAoB,KAAe;EAC5E,OAAOD,SAAS,CAACE,GAAG,CAAC,CAACC,EAAE,EAAEC,KAAK,KAAKD,EAAE,GAAGE,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGL,YAAY,EAAEG,KAAK,GAAG,CAAC,CAAC,CAAC;AACjF,CAAC;AAED,MAAMG,YAAY,GAAIC,GAAa,IAAa;EAC9C,OAAOA,GAAG,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAGC,KAAK,EAAE,CAAC,CAAC;AACnD,CAAC;AAED,MAAMC,YAAY,GAAGA,CAACC,IAAY,EAAEC,IAAY,EAAEC,EAAU,KAAa;EACvE,OAAQA,EAAE,GAAGF,IAAI,IAAK,CAAC,GAAGR,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGO,IAAI,EAAE,CAACC,IAAI,CAAC,CAAC;AACtD,CAAC;AAED,MAAME,YAAY,GAAGA,CAACC,IAAY,EAAEhB,YAAoB,KAAa;EACnE;EACA,MAAMiB,wBAAwB,GAAGC,MAAM,CAACC,MAAM,CAACtB,eAAe,CAACuB,SAAS,CAAC,CAACZ,MAAM,CAAC,CAACa,KAAK,EAAEX,KAAK,KAAK;IACjG,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC7B,OAAOW,KAAK,GAAGX,KAAK;IACtB;IACA,OAAOW,KAAK;EACd,CAAC,EAAE,CAAC,CAAC;;EAEL;EACA,MAAMC,cAAc,GAAGL,wBAAwB,GAAG,EAAE,GAAGrB,GAAG;;EAE1D;EACA,MAAMG,SAAS,GAAGwB,KAAK,CAACP,IAAI,CAAC,CAACQ,IAAI,CAACF,cAAc,CAAC;;EAElD;EACA,MAAMf,GAAG,GAAGT,YAAY,CAACC,SAAS,EAAEC,YAAY,CAAC;;EAEjD;EACA,MAAMyB,GAAG,GAAGnB,YAAY,CAACC,GAAG,CAAC;;EAE7B;EACA,MAAMmB,WAAW,GAAG1B,YAAY,GAAG,EAAE;EACrC,MAAM2B,gBAAgB,GAAGX,IAAI,GAAG,EAAE;EAClC,MAAMY,GAAG,GAAGjB,YAAY,CAACe,WAAW,EAAEC,gBAAgB,EAAEF,GAAG,CAAC;;EAE5D;EACA,OAAOG,GAAG,GAAGhC,GAAG;AAClB,CAAC;AAED,eAAemB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}